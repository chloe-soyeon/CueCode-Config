# =========================================
# API-GATEWAY (prod) - Spring Cloud Config
# 목적: 운영/실서비스용. 최소한의 노출, 보안 강화를 기본 원칙으로 함.
# =========================================
spring:
  application:
    name: API-GATEWAY            # 서비스명 (로그/모니터링 식별)
  config:
    activate:
      on-profile: prod           # 이 파일은 prod 프로필에서만 활성화
  cloud:
    discovery:
      enabled: false             # Eureka 등 DiscoveryClient 비활성화
    gateway:
      routes:                    # 게이트웨이 라우팅 규칙 (K8s DNS 사용)
        - id: user
          uri: http://user-svc.default.svc.cluster.local:11000
          predicates:
            - Path=/user/**


server:
  port: 13000                    # 게이트웨이 HTTP 포트
  shutdown: graceful             # 무중단 배포/롤링 업데이트 시 안전

management:
  server:
    address: 0.0.0.0             # 컨테이너/K8s 환경에서 모든 인터페이스 바인딩
    port: 13001                  # Actuator 포트(서비스 분리 권장)
  endpoints:
    web:
      exposure:
        include:                 # 운영은 최소 엔드포인트만 노출
          - health
          - info
          - prometheus           # Prometheus 스크레이핑 시만 노출
  endpoint:
    health:
      enabled: true
      show-details: when_authorized  # 인증된 호출에 한해 상세정보
    shutdown:
      enabled: false             # 운영에서 종료 엔드포인트 차단

logging:
  level:
    root: INFO
    org.springframework.cloud.gateway: INFO  # 과도한 로그 방지

# CORS (운영) — 반드시 화이트리스트 기반으로 관리 (환경변수로 주입 권장)
cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:https://example.com}  # 쉼표로 여러 도메인
  allowed-methods: "GET,POST,PUT,DELETE,OPTIONS"
  allowed-headers: "*"
  allow-credentials: true

# JWT (운영) — 키는 절대 깃에 저장하지 말고, 환경변수/Secret Manager/K8s Secret로만 주입
jwt:
  token:
    creator: cuecoder
    access:
      valid:
        time: "300"              # Access Token 유효시간(초) — 5분 (짧게 유지 권장)
      name: jwtAccessToken
    refresh:
      valid:
        time: "3600"             # Refresh Token 유효시간(초) — 1시간
      name: jwtRefreshToken
  secret:
    key: ${JWT_SECRET}           # 예) K8s Secret, Vault, NCP Secret Manager 등에서 주입
